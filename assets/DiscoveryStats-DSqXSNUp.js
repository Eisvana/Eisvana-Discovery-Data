import{d as H,u as Q,s as E,r as F,c as v,g as re,a as X,w as J,o as N,b as j,e as L,f as k,h as o,i as le,Q as K,j as I,k as h,p as oe,l as ne,t as ie,m as t,n as $,q as n,F as q,v as ce,x as de,z as ue,A as me,B as ge,_ as G}from"./index-C10oCr5r.js";import{r as ve}from"./index-DX4dBnHi.js";const _=(e,a,t=1)=>parseFloat((a?e/a*100:0).toFixed(t)),R=e=>`${e}%`,fe=H({__name:"DiscovererStats",setup(e){const a=Q(),{filteredData:t,dataLength:l,amountTagged:s}=E(a),r=F(null),n=F({sortBy:"discoveries",descending:!0,page:1,rowsPerPage:10}),i=v((()=>{var e;const a={};for(let r=0;r<t.value.length;r++){const o=t.value[r];if(!o.Discoverer)continue;const n=a[e=o.Discoverer]??(a[e]={platform:"",discoveries:0,systems:0,discPercent:0,tagged:0,taggedPercent:0,taggedPercentSelf:0});n.discoveries++,"SolarSystem"===o.Category&&n.systems++,o["Correctly Prefixed"]&&n.tagged++,n.platform||(n.platform=re(o.Platform)),n.discPercent=_(n.discoveries,l.value),n.taggedPercent=_(n.tagged,s.value),n.taggedPercentSelf=_(n.tagged,n.systems)}return Object.entries(a).map((([e,a])=>({discoverer:e,...a})))})),d=F([]),u=X([{name:"pos",label:"Pos.",align:"left",field:e=>`${d.value.indexOf(e)+1}.`},{name:"name",label:"Name",align:"left",field:"discoverer",sortable:!0},{name:"platform",label:"Platform",align:"left",field:"platform",sortable:!0},{name:"discoveries",label:"Discoveries",align:"left",field:"discoveries",sortable:!0},{name:"discPercent",label:"Discoveries %",align:"left",field:"discPercent",format:R,sortable:!0},{name:"tagged",label:"Tagged",align:"left",field:"tagged",sortable:!0},{name:"taggedPercent",label:"Tagged % of Total",align:"left",field:"taggedPercent",format:R,sortable:!0},{name:"taggedPercentSelf",label:"Tag Rate",align:"left",field:"taggedPercentSelf",format:R,sortable:!0}]);J((()=>{var e;if(!n.value.sortBy)return;const a=null==(e=r.value)?void 0:e.filteredSortedRows;n.value.descending?d.value=a?[...a]:[]:d.value=a?[...a.toReversed()]:[]}));const c=v((()=>t.value.some((e=>"SolarSystem"===e.Category)))),g=u.slice(0,-3);return(e,a)=>i.value.length?(N(),j(I,{key:0,label:"Discoverer Stats","default-opened":""},{default:L((()=>[k(K,{pagination:n.value,"onUpdate:pagination":a[0]||(a[0]=e=>n.value=e),columns:c.value?u:o(g),rows:i.value,"rows-per-page-options":o(le),class:"q-px-md","column-sort-order":"da",ref_key:"discovererTable",ref:r,"table-header-class":"table-header","binary-state-sort":"",flat:""},null,8,["pagination","columns","rows","rows-per-page-options"])])),_:1})):h("",!0)}}),ye=H({__name:"PlatformStats",setup(e){const a=Q(),{filteredData:t,dataLength:l,amountTagged:s}=E(a),r=F(null),n=F({sortBy:"discoveries",descending:!0,page:1,rowsPerPage:0}),i=v((()=>{const e={Steam:new Set,PlayStation:new Set,Xbox:new Set,GOG:new Set,"Nintendo Switch":new Set},a={};for(let r=0;r<t.value.length;r++){const o=t.value[r];if(!o.Platform)continue;const n=oe[o.Platform].label,i=a[n]??(a[n]={players:0,discoveries:0,discPercent:0,systems:0,tagged:0,taggedPercent:0,taggedPercentSelf:0});i.discoveries++,"SolarSystem"===o.Category&&i.systems++,o["Correctly Prefixed"]&&i.tagged++,e[n].add(o.Discoverer),i.players=e[n].size,i.discPercent=_(i.discoveries,l.value),i.taggedPercent=_(i.tagged,s.value),i.taggedPercentSelf=_(i.tagged,i.systems)}return Object.entries(a).map((([e,a])=>({platform:e,...a})))})),d=F([]),u=X([{name:"pos",label:"Pos.",align:"left",field:e=>`${d.value.indexOf(e)+1}.`},{name:"platform",label:"Platform",align:"left",field:"platform",sortable:!0},{name:"players",label:"Players",align:"left",field:"players",sortable:!0},{name:"discoveries",label:"Discoveries",align:"left",field:"discoveries",sortable:!0},{name:"discPercent",label:"Discoveries %",align:"left",field:"discPercent",format:R,sortable:!0},{name:"tagged",label:"Tagged",align:"left",field:"tagged",sortable:!0},{name:"taggedPercent",label:"Tagged % of Total",align:"left",field:"taggedPercent",format:R,sortable:!0},{name:"taggedPercentSelf",label:"Tag Rate",align:"left",field:"taggedPercentSelf",format:R,sortable:!0}]);J((()=>{var e;if(!n.value.sortBy)return;const a=null==(e=r.value)?void 0:e.filteredSortedRows;n.value.descending?d.value=a?[...a]:[]:d.value=a?[...a.toReversed()]:[]}));const c=v((()=>t.value.some((e=>"SolarSystem"===e.Category)))),g=u.slice(0,-3);return(e,a)=>i.value.length?(N(),j(I,{key:0,label:"Platform Stats","default-opened":""},{default:L((()=>[k(K,{pagination:n.value,"onUpdate:pagination":a[0]||(a[0]=e=>n.value=e),columns:c.value?u:o(g),rows:i.value,class:"q-px-md","column-sort-order":"da",ref_key:"platformTable",ref:r,"table-header-class":"table-header","binary-state-sort":"",flat:"","hide-bottom":""},null,8,["pagination","columns","rows"])])),_:1})):h("",!0)}}),pe=864e5,_e={class:"number-stats-wrapper q-px-md q-mt-sm"},Pe=t("div",null,"Systems correctly named:",-1),be=t("div",null,"Not/incorrectly named:",-1),Se=t("div",null,"Procedural name systems:",-1),De=t("div",null,"Procedural name:",-1),he=t("div",null,"Number of discoverers:",-1),Ne=t("div",null,"Average discoveries per day:",-1),Te=t("div",null,"Average number of players per day:",-1),we=t("div",null,"Average number of prefixes per day:",-1),ke=t("div",null,"Average non-prefixed systems per day:",-1),xe=t("div",null,"Earliest Discovery:",-1),Be=t("div",null,"Latest Discovery:",-1),Ce=H({__name:"NumberStats",setup(e){const a=Q(),{filteredData:l,amountTagged:s,dataLength:r,dateRange:i}=E(a),d=ne(),{dataHasSystems:u,dataHasOnlySystems:c}=E(d),g=v((()=>{if(i.value.some((e=>!e)))return 0;const[e,a]=i.value;return(new Date(a).getTime()-new Date(e).getTime())/pe+1})),m=ve((()=>{var e;const a={systems:0,systemsNotTagged:0,allProcName:0,systemsProcName:0,discovererNumber:0,avgDiscoverersPerDay:"0",systemsDuplicates:[]},t=new Set,s={},r={};for(let o=0;o<l.value.length;o++){const n=l.value[o];if("SolarSystem"===n.Category&&a.systems++,!1===n["Correctly Prefixed"]&&n.Name&&a.systemsNotTagged++,"SolarSystem"===n.Category&&!n.Name&&n.Discoverer&&a.systemsProcName++,!n.Name&&n.Discoverer&&a.allProcName++,n.Discoverer){t.add(n.Discoverer);const e=ce(n.Timestamp);s[e]??(s[e]=new Set),s[e].add(n.Discoverer)}n.Name&&(r[e=n.Name]??(r[e]=0),r[n.Name]++)}a.discovererNumber=t.size;const o=Object.values(s).map((e=>e.size)).reduce(((e,a)=>e+a),0);return a.avgDiscoverersPerDay=g?(o/g.value).toFixed(2):"0",Object.entries(r).filter((e=>e[1]>1)),a})),{systems:f,systemsNotTagged:y,systemsProcName:p,allProcName:b,discovererNumber:P,avgDiscoverersPerDay:S,systemsDuplicates:D}=ie(m),w=v((()=>_(s.value,f.value))),x=v((()=>_(y.value,f.value))),T=v((()=>_(p.value,f.value))),k=v((()=>_(b.value,r.value))),F=v((()=>g.value?(r.value/g.value).toFixed(2):0)),R=v((()=>g.value?(s.value/g.value).toFixed(2):0)),C=v((()=>g.value?((y.value+p.value)/g.value).toFixed(2):0)),O=e=>e?de(e):"-";return(e,a)=>(N(),j(I,{label:"Number Stats","default-opened":""},{default:L((()=>[t("div",_e,[o(u)?(N(),$(q,{key:0},[Pe,t("div",null,n(o(s))+" ("+n(w.value)+"%)",1),be,t("div",null,n(o(y))+" ("+n(x.value)+"%)",1),o(c)?h("",!0):(N(),$(q,{key:0},[Se,t("div",null,n(o(p))+" ("+n(T.value)+"%)",1)],64))],64)):h("",!0),De,t("div",null,n(o(b))+" ("+n(k.value)+"%)",1),he,t("div",null,n(o(P)),1),Ne,t("div",null,n(F.value),1),Te,t("div",null,n(o(S)),1),o(u)?(N(),$(q,{key:1},[we,t("div",null,n(R.value),1),ke,t("div",null,n(C.value),1)],64)):h("",!0),xe,t("div",null,n(O(o(i)[0])),1),Be,t("div",null,n(O(o(i)[1])),1),h("",!0),h("",!0)]),h("",!0)])),_:1}))}}),Fe={key:0,class:"column q-gutter-y-lg"},Re={class:"column q-px-md q-gutter-y-xl"},Ae={class:"number-stats-wrapper"},Oe=5,qe=H({__name:"DiscoveryStats",setup(e){const a=Q(),{dataLength:l,isLoading:s}=E(a);return(e,a)=>(N(),j(me,{condition:!o(s)},{default:L((()=>[o(l)?(N(),$("div",Fe,[k(Ce),k(fe),k(ye)])):h("",!0)])),else:L((()=>[t("div",Re,[t("div",Ae,[(N(),$(q,null,ue(10,(e=>k(ge,{width:"200px",type:"text"}))),64))]),k(G),k(G)])])),_:1},8,["condition"]))}});export{qe as default};
