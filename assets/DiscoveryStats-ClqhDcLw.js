import{d as V,u as q,s as A,r as O,c as f,g as se,a as G,w as X,b as H,e as T,o as _,Q as I,f as j,h as k,i as J,j as l,k as re,p as le,l as oe,t as ne,m as a,n as $,F as L,q as n,v as ie,y as de,z as ce,A as ue,_ as U,B as me}from"./index-btnRgWjD.js";import{r as ge}from"./index-BoMPYbNO.js";const b=(e,a,l=1)=>parseFloat((a?e/a*100:0).toFixed(l)),h=e=>`${e}%`,ve=V({__name:"DiscovererStats",setup(e){const a=q(),{filteredData:t,dataLength:s,amountTagged:r}=A(a),n=O(null),o=O({sortBy:"discoveries",descending:!0,page:1,rowsPerPage:10}),i=f(()=>{const e={};for(let a=0;a<t.value.length;a++){const l=t.value[a];if(!l.Discoverer)continue;const n=e[l.Discoverer]??={platform:"",discoveries:0,systems:0,discPercent:0,tagged:0,taggedPercent:0,taggedPercentSelf:0};n.discoveries++,"SolarSystem"===l.Category&&n.systems++,l["Correctly Prefixed"]&&n.tagged++,n.platform||=se(l.Platform),n.discPercent=b(n.discoveries,s.value),n.taggedPercent=b(n.tagged,r.value),n.taggedPercentSelf=b(n.tagged,n.systems)}return Object.entries(e).map(([e,a])=>({discoverer:e,...a}))}),d=O([]),u=G([{name:"pos",label:"Pos.",align:"left",field:e=>`${d.value.indexOf(e)+1}.`},{name:"name",label:"Name",align:"left",field:"discoverer",sortable:!0},{name:"platform",label:"Platform",align:"left",field:"platform",sortable:!0},{name:"discoveries",label:"Discoveries",align:"left",field:"discoveries",sortable:!0},{name:"discPercent",label:"Discoveries %",align:"left",field:"discPercent",format:h,sortable:!0},{name:"tagged",label:"Tagged",align:"left",field:"tagged",sortable:!0},{name:"taggedPercent",label:"Tagged % of Total",align:"left",field:"taggedPercent",format:h,sortable:!0},{name:"taggedPercentSelf",label:"Tag Rate",align:"left",field:"taggedPercentSelf",format:h,sortable:!0}]);X(()=>{if(!o.value.sortBy)return;const e=n.value?.filteredSortedRows;o.value.descending?d.value=e?[...e]:[]:d.value=e?[...e.toReversed()]:[]});const c=f(()=>t.value.some(e=>"SolarSystem"===e.Category)),g=u.slice(0,-3);return(e,a)=>i.value.length?(_(),H(I,{key:0,label:"Discoverer Stats","default-opened":""},{default:j(()=>[k(J,{pagination:o.value,"onUpdate:pagination":a[0]||(a[0]=e=>o.value=e),columns:c.value?u:l(g),rows:i.value,"rows-per-page-options":l(re),class:"q-px-md","column-sort-order":"da",ref_key:"discovererTable",ref:n,"table-header-class":"table-header","binary-state-sort":"",flat:""},null,8,["pagination","columns","rows","rows-per-page-options"])]),_:1})):T("",!0)}}),fe=V({__name:"PlatformStats",setup(e){const a=q(),{filteredData:t,dataLength:s,amountTagged:r}=A(a),n=O(null),o=O({sortBy:"discoveries",descending:!0,page:1,rowsPerPage:0}),i=f(()=>{const e={Steam:new Set,PlayStation:new Set,Xbox:new Set,GOG:new Set,"Nintendo Switch":new Set},a={};for(let l=0;l<t.value.length;l++){const n=t.value[l];if(!n.Platform)continue;const o=le[n.Platform].label,i=a[o]??={players:0,discoveries:0,discPercent:0,systems:0,tagged:0,taggedPercent:0,taggedPercentSelf:0};i.discoveries++,"SolarSystem"===n.Category&&i.systems++,n["Correctly Prefixed"]&&i.tagged++,e[o].add(n.Discoverer),i.players=e[o].size,i.discPercent=b(i.discoveries,s.value),i.taggedPercent=b(i.tagged,r.value),i.taggedPercentSelf=b(i.tagged,i.systems)}return Object.entries(a).map(([e,a])=>({platform:e,...a}))}),d=O([]),u=G([{name:"pos",label:"Pos.",align:"left",field:e=>`${d.value.indexOf(e)+1}.`},{name:"platform",label:"Platform",align:"left",field:"platform",sortable:!0},{name:"players",label:"Players",align:"left",field:"players",sortable:!0},{name:"discoveries",label:"Discoveries",align:"left",field:"discoveries",sortable:!0},{name:"discPercent",label:"Discoveries %",align:"left",field:"discPercent",format:h,sortable:!0},{name:"tagged",label:"Tagged",align:"left",field:"tagged",sortable:!0},{name:"taggedPercent",label:"Tagged % of Total",align:"left",field:"taggedPercent",format:h,sortable:!0},{name:"taggedPercentSelf",label:"Tag Rate",align:"left",field:"taggedPercentSelf",format:h,sortable:!0}]);X(()=>{if(!o.value.sortBy)return;const e=n.value?.filteredSortedRows;o.value.descending?d.value=e?[...e]:[]:d.value=e?[...e.toReversed()]:[]});const c=f(()=>t.value.some(e=>"SolarSystem"===e.Category)),g=u.slice(0,-3);return(e,a)=>i.value.length?(_(),H(I,{key:0,label:"Platform Stats","default-opened":""},{default:j(()=>[k(J,{pagination:o.value,"onUpdate:pagination":a[0]||(a[0]=e=>o.value=e),columns:c.value?u:l(g),rows:i.value,class:"q-px-md","column-sort-order":"da",ref_key:"platformTable",ref:n,"table-header-class":"table-header","binary-state-sort":"",flat:"","hide-bottom":""},null,8,["pagination","columns","rows"])]),_:1})):T("",!0)}}),pe=864e5,ye={class:"number-stats-wrapper q-px-md q-mt-sm"},be=V({__name:"NumberStats",setup(e){const t=q(),{filteredData:s,amountTagged:r,dataLength:o,dateRange:i}=A(t),d=oe(),{dataHasSystems:u,dataHasOnlySystems:c}=A(d),g=f(()=>{if(i.value.some(e=>!e))return 0;const[e,a]=i.value;return(new Date(a).getTime()-new Date(e).getTime())/pe+1}),v=ge(()=>{const e={systems:0,systemsNotTagged:0,allProcName:0,systemsProcName:0,discovererNumber:0,avgDiscoverersPerDay:"0",systemsDuplicates:[]},a=new Set,l={},t={};for(let r=0;r<s.value.length;r++){const n=s.value[r];if("SolarSystem"===n.Category&&e.systems++,!1===n["Correctly Prefixed"]&&n.Name&&e.systemsNotTagged++,"SolarSystem"===n.Category&&!n.Name&&n.Discoverer&&e.systemsProcName++,!n.Name&&n.Discoverer&&e.allProcName++,n.Discoverer){a.add(n.Discoverer);const e=ce(n.Timestamp);l[e]??=new Set,l[e].add(n.Discoverer)}n.Name&&(t[n.Name]??=0,t[n.Name]++)}e.discovererNumber=a.size;const r=Object.values(l).map(e=>e.size).reduce((e,a)=>e+a,0);return e.avgDiscoverersPerDay=g?(r/g.value).toFixed(2):"0",Object.entries(t).filter(e=>e[1]>1),e}),{systems:m,systemsNotTagged:y,systemsProcName:p,allProcName:P,discovererNumber:S,avgDiscoverersPerDay:D,systemsDuplicates:x}=ne(v),N=f(()=>b(r.value,m.value)),h=f(()=>b(y.value,m.value)),w=f(()=>b(p.value,m.value)),k=f(()=>b(P.value,o.value)),O=f(()=>g.value?(o.value/g.value).toFixed(2):0),C=f(()=>g.value?(r.value/g.value).toFixed(2):0),R=f(()=>g.value?((y.value+p.value)/g.value).toFixed(2):0),F=e=>e?ie(e):"-";return(e,t)=>(_(),H(I,{label:"Number Stats","default-opened":""},{default:j(()=>[a("div",ye,[l(u)?(_(),$(L,{key:0},[t[1]||(t[1]=a("div",null,"Systems correctly named:",-1)),a("div",null,n(l(r))+" ("+n(N.value)+"%)",1),t[2]||(t[2]=a("div",null,"Incorrectly named:",-1)),a("div",null,n(l(y))+" ("+n(h.value)+"%)",1),l(c)?T("",!0):(_(),$(L,{key:0},[t[0]||(t[0]=a("div",null,"Procedural name systems:",-1)),a("div",null,n(l(p))+" ("+n(w.value)+"%)",1)],64))],64)):T("",!0),t[5]||(t[5]=a("div",null,"Procedural name:",-1)),a("div",null,n(l(P))+" ("+n(k.value)+"%)",1),t[6]||(t[6]=a("div",null,"Number of discoverers:",-1)),a("div",null,n(l(S)),1),t[7]||(t[7]=a("div",null,"Average discoveries per day:",-1)),a("div",null,n(O.value),1),t[8]||(t[8]=a("div",null,"Average number of players per day:",-1)),a("div",null,n(l(D)),1),l(u)?(_(),$(L,{key:1},[t[3]||(t[3]=a("div",null,"Average number of prefixes per day:",-1)),a("div",null,n(C.value),1),t[4]||(t[4]=a("div",null,"Average non-prefixed systems per day:",-1)),a("div",null,n(R.value),1)],64)):T("",!0),t[9]||(t[9]=a("div",null,"Earliest Discovery:",-1)),a("div",null,n(F(l(i)[0])),1),t[10]||(t[10]=a("div",null,"Latest Discovery:",-1)),a("div",null,n(F(l(i)[1])),1),T("",!0),T("",!0)]),T("",!0)]),_:1}))}}),Pe={key:0,class:"column q-gutter-y-lg"},Se={class:"column q-px-md q-gutter-y-xl"},De={class:"number-stats-wrapper"},Ne=5,xe=V({__name:"DiscoveryStats",setup(e){const t=q(),{dataLength:s,isLoading:r}=A(t);return(e,t)=>(_(),H(ue,{condition:!l(r)},{default:j(()=>[l(s)?(_(),$("div",Pe,[k(be),k(ve),k(fe)])):T("",!0)]),else:j(()=>[a("div",Se,[a("div",De,[(_(),$(L,null,de(10,e=>k(me,{width:"200px",type:"text"})),64))]),k(U),k(U)])]),_:1},8,["condition"]))}});export{xe as default};
